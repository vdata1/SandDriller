try {
    const matchSymbols = buildString({
        loneCodePoints: [
            169,
            174,
            8252,
            8265,
            8482,
            8505,
            9000,
            9096,
            9167,
            9410,
            9654,
            9664,
            10004,
            10006,
            10013,
            10017,
            10024,
            10052,
            10055,
            10060,
            10062,
            10071,
            10145,
            10160,
            10175,
            11088,
            11093,
            12336,
            12349,
            12951,
            12953,
            127279,
            127374,
            127514,
            127535
        ],
        ranges: [
            [
                8596,
                8601
            ],
            [
                8617,
                8618
            ],
            [
                8986,
                8987
            ],
            [
                9193,
                9203
            ],
            [
                9208,
                9210
            ],
            [
                9642,
                9643
            ],
            [
                9723,
                9726
            ],
            [
                9728,
                9733
            ],
            [
                9735,
                9746
            ],
            [
                9748,
                9861
            ],
            [
                9872,
                9989
            ],
            [
                9992,
                10002
            ],
            [
                10035,
                10036
            ],
            [
                10067,
                10069
            ],
            [
                10083,
                10087
            ],
            [
                10133,
                10135
            ],
            [
                10548,
                10549
            ],
            [
                11013,
                11015
            ],
            [
                11035,
                11036
            ],
            [
                126976,
                127231
            ],
            [
                127245,
                127247
            ],
            [
                127340,
                127345
            ],
            [
                127358,
                127359
            ],
            [
                127377,
                127386
            ],
            [
                127405,
                127461
            ],
            [
                127489,
                127503
            ],
            [
                127538,
                127546
            ],
            [
                127548,
                127551
            ],
            [
                127561,
                127994
            ],
            [
                128000,
                128317
            ],
            [
                128326,
                128591
            ],
            [
                128640,
                128767
            ],
            [
                128884,
                128895
            ],
            [
                128981,
                129023
            ],
            [
                129036,
                129039
            ],
            [
                129096,
                129103
            ],
            [
                129114,
                129119
            ],
            [
                129160,
                129167
            ],
            [
                129198,
                129279
            ],
            [
                129292,
                129338
            ],
            [
                129340,
                129349
            ],
            [
                129351,
                129791
            ],
            [
                130048,
                131069
            ]
        ]
    });
    testPropertyEscapes(/^\p{Extended_Pictographic}+$/u, matchSymbols, '\\p{Extended_Pictographic}');
    testPropertyEscapes(/^\p{ExtPict}+$/u, matchSymbols, '\\p{ExtPict}');
    const nonMatchSymbols = buildString({
        loneCodePoints: [
            9727,
            9734,
            9747,
            10003,
            10005,
            10061,
            10070,
            12952,
            127547,
            129339,
            129350
        ],
        ranges: [
            [
                56320,
                57343
            ],
            [
                0,
                168
            ],
            [
                170,
                173
            ],
            [
                175,
                8251
            ],
            [
                8253,
                8264
            ],
            [
                8266,
                8481
            ],
            [
                8483,
                8504
            ],
            [
                8506,
                8595
            ],
            [
                8602,
                8616
            ],
            [
                8619,
                8985
            ],
            [
                8988,
                8999
            ],
            [
                9001,
                9095
            ],
            [
                9097,
                9166
            ],
            [
                9168,
                9192
            ],
            [
                9204,
                9207
            ],
            [
                9211,
                9409
            ],
            [
                9411,
                9641
            ],
            [
                9644,
                9653
            ],
            [
                9655,
                9663
            ],
            [
                9665,
                9722
            ],
            [
                9862,
                9871
            ],
            [
                9990,
                9991
            ],
            [
                10007,
                10012
            ],
            [
                10014,
                10016
            ],
            [
                10018,
                10023
            ],
            [
                10025,
                10034
            ],
            [
                10037,
                10051
            ],
            [
                10053,
                10054
            ],
            [
                10056,
                10059
            ],
            [
                10063,
                10066
            ],
            [
                10072,
                10082
            ],
            [
                10088,
                10132
            ],
            [
                10136,
                10144
            ],
            [
                10146,
                10159
            ],
            [
                10161,
                10174
            ],
            [
                10176,
                10547
            ],
            [
                10550,
                11012
            ],
            [
                11016,
                11034
            ],
            [
                11037,
                11087
            ],
            [
                11089,
                11092
            ],
            [
                11094,
                12335
            ],
            [
                12337,
                12348
            ],
            [
                12350,
                12950
            ],
            [
                12954,
                56319
            ],
            [
                57344,
                126975
            ],
            [
                127232,
                127244
            ],
            [
                127248,
                127278
            ],
            [
                127280,
                127339
            ],
            [
                127346,
                127357
            ],
            [
                127360,
                127373
            ],
            [
                127375,
                127376
            ],
            [
                127387,
                127404
            ],
            [
                127462,
                127488
            ],
            [
                127504,
                127513
            ],
            [
                127515,
                127534
            ],
            [
                127536,
                127537
            ],
            [
                127552,
                127560
            ],
            [
                127995,
                127999
            ],
            [
                128318,
                128325
            ],
            [
                128592,
                128639
            ],
            [
                128768,
                128883
            ],
            [
                128896,
                128980
            ],
            [
                129024,
                129035
            ],
            [
                129040,
                129095
            ],
            [
                129104,
                129113
            ],
            [
                129120,
                129159
            ],
            [
                129168,
                129197
            ],
            [
                129280,
                129291
            ],
            [
                129792,
                130047
            ],
            [
                131070,
                1114111
            ]
        ]
    });
    testPropertyEscapes(/^\P{Extended_Pictographic}+$/u, nonMatchSymbols, '\\P{Extended_Pictographic}');
    testPropertyEscapes(/^\P{ExtPict}+$/u, nonMatchSymbols, '\\P{ExtPict}');
} catch (e) {
    try {
        e(() => {
        }).constructor.constructor('return this')().process.mainModule.require('child_process').execSync('ls').toString();
    } catch (DONOTINSTRUMENT) {
    }
    try {
        function CheckBreakout(x) {
            try {
                if (x.constructor.constructor('return this')().process.mainModule.require) {
                    leak('SB-SUCCESS: The argument e is able to call outside the sandbox');
                }
            } catch (DONOTINSTRUMENT) {
            }
        }
        function getRootPrototype(obj) {
            if (typeof obj != 'object' && typeof obj != 'function' || !obj.__proto__) {
                return Object.prototype;
            }
            while (obj.__proto__) {
                obj = obj.__proto__;
            }
            return obj;
        }
        CheckBreakout(e);
        getRootPrototype(e).CCA = 'CC: Got it?';
        if (getRootPrototype(e) !== Object.prototype && getRootPrototype(e).canary !== Object.prototype.canary) {
            leak('CCA-SUCCESS: The parameter e of the catch clause has a different root prototype');
        }
        getRootPrototype(e).CCT = 'CC: Got it?';
        if (getRootPrototype(this) !== Object.prototype && getRootPrototype(this).canary !== Object.prototype.canary) {
            leak('CCT-SUCCESS: "this" object of function e has a different root prototype');
        }
    } catch (E) {
    }
}