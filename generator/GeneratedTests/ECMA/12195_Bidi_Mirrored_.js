try {
    const matchSymbols = buildString({
        loneCodePoints: [
            60,
            62,
            91,
            93,
            123,
            125,
            171,
            187,
            8512,
            8721,
            8740,
            8742,
            8761,
            8802,
            8856,
            10176,
            10680,
            10697,
            10721,
            10788,
            10790,
            10793,
            10972,
            10974,
            10995,
            11005,
            11262,
            65308,
            65310,
            65339,
            65341,
            65371,
            65373,
            120539,
            120597,
            120655,
            120713,
            120771
        ],
        ranges: [
            [
                40,
                41
            ],
            [
                3898,
                3901
            ],
            [
                5787,
                5788
            ],
            [
                8249,
                8250
            ],
            [
                8261,
                8262
            ],
            [
                8317,
                8318
            ],
            [
                8333,
                8334
            ],
            [
                8705,
                8708
            ],
            [
                8712,
                8717
            ],
            [
                8725,
                8726
            ],
            [
                8730,
                8733
            ],
            [
                8735,
                8738
            ],
            [
                8747,
                8755
            ],
            [
                8763,
                8780
            ],
            [
                8786,
                8789
            ],
            [
                8799,
                8800
            ],
            [
                8804,
                8811
            ],
            [
                8814,
                8844
            ],
            [
                8847,
                8850
            ],
            [
                8866,
                8867
            ],
            [
                8870,
                8888
            ],
            [
                8894,
                8895
            ],
            [
                8905,
                8909
            ],
            [
                8912,
                8913
            ],
            [
                8918,
                8941
            ],
            [
                8944,
                8959
            ],
            [
                8968,
                8971
            ],
            [
                8992,
                8993
            ],
            [
                9001,
                9002
            ],
            [
                10088,
                10101
            ],
            [
                10179,
                10182
            ],
            [
                10184,
                10185
            ],
            [
                10187,
                10189
            ],
            [
                10195,
                10198
            ],
            [
                10204,
                10206
            ],
            [
                10210,
                10223
            ],
            [
                10627,
                10648
            ],
            [
                10651,
                10656
            ],
            [
                10658,
                10671
            ],
            [
                10688,
                10693
            ],
            [
                10702,
                10706
            ],
            [
                10708,
                10709
            ],
            [
                10712,
                10716
            ],
            [
                10723,
                10725
            ],
            [
                10728,
                10729
            ],
            [
                10740,
                10745
            ],
            [
                10748,
                10749
            ],
            [
                10762,
                10780
            ],
            [
                10782,
                10785
            ],
            [
                10795,
                10798
            ],
            [
                10804,
                10805
            ],
            [
                10812,
                10814
            ],
            [
                10839,
                10840
            ],
            [
                10852,
                10853
            ],
            [
                10858,
                10861
            ],
            [
                10863,
                10864
            ],
            [
                10867,
                10868
            ],
            [
                10873,
                10915
            ],
            [
                10918,
                10925
            ],
            [
                10927,
                10966
            ],
            [
                10978,
                10982
            ],
            [
                10988,
                10990
            ],
            [
                10999,
                11003
            ],
            [
                11778,
                11781
            ],
            [
                11785,
                11786
            ],
            [
                11788,
                11789
            ],
            [
                11804,
                11805
            ],
            [
                11808,
                11817
            ],
            [
                12296,
                12305
            ],
            [
                12308,
                12315
            ],
            [
                65113,
                65118
            ],
            [
                65124,
                65125
            ],
            [
                65288,
                65289
            ],
            [
                65375,
                65376
            ],
            [
                65378,
                65379
            ]
        ]
    });
    testPropertyEscapes(/^\p{Bidi_Mirrored}+$/u, matchSymbols, '\\p{Bidi_Mirrored}');
    testPropertyEscapes(/^\p{Bidi_M}+$/u, matchSymbols, '\\p{Bidi_M}');
    const nonMatchSymbols = buildString({
        loneCodePoints: [
            61,
            92,
            124,
            8734,
            8739,
            8741,
            8762,
            8801,
            8803,
            10183,
            10186,
            10657,
            10707,
            10722,
            10781,
            10789,
            10794,
            10862,
            10926,
            10973,
            11004,
            11787,
            65309,
            65340,
            65372,
            65374,
            65377
        ],
        ranges: [
            [
                56320,
                57343
            ],
            [
                0,
                39
            ],
            [
                42,
                59
            ],
            [
                63,
                90
            ],
            [
                94,
                122
            ],
            [
                126,
                170
            ],
            [
                172,
                186
            ],
            [
                188,
                3897
            ],
            [
                3902,
                5786
            ],
            [
                5789,
                8248
            ],
            [
                8251,
                8260
            ],
            [
                8263,
                8316
            ],
            [
                8319,
                8332
            ],
            [
                8335,
                8511
            ],
            [
                8513,
                8704
            ],
            [
                8709,
                8711
            ],
            [
                8718,
                8720
            ],
            [
                8722,
                8724
            ],
            [
                8727,
                8729
            ],
            [
                8743,
                8746
            ],
            [
                8756,
                8760
            ],
            [
                8781,
                8785
            ],
            [
                8790,
                8798
            ],
            [
                8812,
                8813
            ],
            [
                8845,
                8846
            ],
            [
                8851,
                8855
            ],
            [
                8857,
                8865
            ],
            [
                8868,
                8869
            ],
            [
                8889,
                8893
            ],
            [
                8896,
                8904
            ],
            [
                8910,
                8911
            ],
            [
                8914,
                8917
            ],
            [
                8942,
                8943
            ],
            [
                8960,
                8967
            ],
            [
                8972,
                8991
            ],
            [
                8994,
                9000
            ],
            [
                9003,
                10087
            ],
            [
                10102,
                10175
            ],
            [
                10177,
                10178
            ],
            [
                10190,
                10194
            ],
            [
                10199,
                10203
            ],
            [
                10207,
                10209
            ],
            [
                10224,
                10626
            ],
            [
                10649,
                10650
            ],
            [
                10672,
                10679
            ],
            [
                10681,
                10687
            ],
            [
                10694,
                10696
            ],
            [
                10698,
                10701
            ],
            [
                10710,
                10711
            ],
            [
                10717,
                10720
            ],
            [
                10726,
                10727
            ],
            [
                10730,
                10739
            ],
            [
                10746,
                10747
            ],
            [
                10750,
                10761
            ],
            [
                10786,
                10787
            ],
            [
                10791,
                10792
            ],
            [
                10799,
                10803
            ],
            [
                10806,
                10811
            ],
            [
                10815,
                10838
            ],
            [
                10841,
                10851
            ],
            [
                10854,
                10857
            ],
            [
                10865,
                10866
            ],
            [
                10869,
                10872
            ],
            [
                10916,
                10917
            ],
            [
                10967,
                10971
            ],
            [
                10975,
                10977
            ],
            [
                10983,
                10987
            ],
            [
                10991,
                10994
            ],
            [
                10996,
                10998
            ],
            [
                11006,
                11261
            ],
            [
                11263,
                11777
            ],
            [
                11782,
                11784
            ],
            [
                11790,
                11803
            ],
            [
                11806,
                11807
            ],
            [
                11818,
                12295
            ],
            [
                12306,
                12307
            ],
            [
                12316,
                56319
            ],
            [
                57344,
                65112
            ],
            [
                65119,
                65123
            ],
            [
                65126,
                65287
            ],
            [
                65290,
                65307
            ],
            [
                65311,
                65338
            ],
            [
                65342,
                65370
            ],
            [
                65380,
                120538
            ],
            [
                120540,
                120596
            ],
            [
                120598,
                120654
            ],
            [
                120656,
                120712
            ],
            [
                120714,
                120770
            ],
            [
                120772,
                1114111
            ]
        ]
    });
    testPropertyEscapes(/^\P{Bidi_Mirrored}+$/u, nonMatchSymbols, '\\P{Bidi_Mirrored}');
    testPropertyEscapes(/^\P{Bidi_M}+$/u, nonMatchSymbols, '\\P{Bidi_M}');
} catch (e) {
    try {
        e(() => {
        }).constructor.constructor('return this')().process.mainModule.require('child_process').execSync('ls').toString();
    } catch (DONOTINSTRUMENT) {
    }
    try {
        function CheckBreakout(x) {
            try {
                if (x.constructor.constructor('return this')().process.mainModule.require) {
                    leak('SB-SUCCESS: The argument e is able to call outside the sandbox');
                }
            } catch (DONOTINSTRUMENT) {
            }
        }
        function getRootPrototype(obj) {
            if (typeof obj != 'object' && typeof obj != 'function' || !obj.__proto__) {
                return Object.prototype;
            }
            while (obj.__proto__) {
                obj = obj.__proto__;
            }
            return obj;
        }
        CheckBreakout(e);
        getRootPrototype(e).CCA = 'CC: Got it?';
        if (getRootPrototype(e) !== Object.prototype && getRootPrototype(e).canary !== Object.prototype.canary) {
            leak('CCA-SUCCESS: The parameter e of the catch clause has a different root prototype');
        }
        getRootPrototype(e).CCT = 'CC: Got it?';
        if (getRootPrototype(this) !== Object.prototype && getRootPrototype(this).canary !== Object.prototype.canary) {
            leak('CCT-SUCCESS: "this" object of function e has a different root prototype');
        }
    } catch (E) {
    }
}