try {
    const matchSymbols = buildString({
        loneCodePoints: [
            9200,
            9203,
            9855,
            9875,
            9889,
            9934,
            9940,
            9962,
            9973,
            9978,
            9981,
            9989,
            10024,
            10060,
            10062,
            10071,
            10160,
            10175,
            11088,
            11093,
            126980,
            127183,
            127374,
            127489,
            127514,
            127535,
            127988,
            128064,
            128378,
            128420,
            128716
        ],
        ranges: [
            [
                8986,
                8987
            ],
            [
                9193,
                9196
            ],
            [
                9725,
                9726
            ],
            [
                9748,
                9749
            ],
            [
                9800,
                9811
            ],
            [
                9898,
                9899
            ],
            [
                9917,
                9918
            ],
            [
                9924,
                9925
            ],
            [
                9970,
                9971
            ],
            [
                9994,
                9995
            ],
            [
                10067,
                10069
            ],
            [
                10133,
                10135
            ],
            [
                11035,
                11036
            ],
            [
                127377,
                127386
            ],
            [
                127462,
                127487
            ],
            [
                127538,
                127542
            ],
            [
                127544,
                127546
            ],
            [
                127568,
                127569
            ],
            [
                127744,
                127776
            ],
            [
                127789,
                127797
            ],
            [
                127799,
                127868
            ],
            [
                127870,
                127891
            ],
            [
                127904,
                127946
            ],
            [
                127951,
                127955
            ],
            [
                127968,
                127984
            ],
            [
                127992,
                128062
            ],
            [
                128066,
                128252
            ],
            [
                128255,
                128317
            ],
            [
                128331,
                128334
            ],
            [
                128336,
                128359
            ],
            [
                128405,
                128406
            ],
            [
                128507,
                128591
            ],
            [
                128640,
                128709
            ],
            [
                128720,
                128722
            ],
            [
                128725,
                128727
            ],
            [
                128747,
                128748
            ],
            [
                128756,
                128764
            ],
            [
                128992,
                129003
            ],
            [
                129292,
                129338
            ],
            [
                129340,
                129349
            ],
            [
                129351,
                129400
            ],
            [
                129402,
                129483
            ],
            [
                129485,
                129535
            ],
            [
                129648,
                129652
            ],
            [
                129656,
                129658
            ],
            [
                129664,
                129670
            ],
            [
                129680,
                129704
            ],
            [
                129712,
                129718
            ],
            [
                129728,
                129730
            ],
            [
                129744,
                129750
            ]
        ]
    });
    testPropertyEscapes(/^\p{Emoji_Presentation}+$/u, matchSymbols, '\\p{Emoji_Presentation}');
    testPropertyEscapes(/^\p{EPres}+$/u, matchSymbols, '\\p{EPres}');
    const nonMatchSymbols = buildString({
        loneCodePoints: [
            9972,
            10061,
            10070,
            127488,
            127543,
            127798,
            127869,
            128063,
            128065,
            128335,
            129339,
            129350,
            129401,
            129484
        ],
        ranges: [
            [
                56320,
                57343
            ],
            [
                0,
                8985
            ],
            [
                8988,
                9192
            ],
            [
                9197,
                9199
            ],
            [
                9201,
                9202
            ],
            [
                9204,
                9724
            ],
            [
                9727,
                9747
            ],
            [
                9750,
                9799
            ],
            [
                9812,
                9854
            ],
            [
                9856,
                9874
            ],
            [
                9876,
                9888
            ],
            [
                9890,
                9897
            ],
            [
                9900,
                9916
            ],
            [
                9919,
                9923
            ],
            [
                9926,
                9933
            ],
            [
                9935,
                9939
            ],
            [
                9941,
                9961
            ],
            [
                9963,
                9969
            ],
            [
                9974,
                9977
            ],
            [
                9979,
                9980
            ],
            [
                9982,
                9988
            ],
            [
                9990,
                9993
            ],
            [
                9996,
                10023
            ],
            [
                10025,
                10059
            ],
            [
                10063,
                10066
            ],
            [
                10072,
                10132
            ],
            [
                10136,
                10159
            ],
            [
                10161,
                10174
            ],
            [
                10176,
                11034
            ],
            [
                11037,
                11087
            ],
            [
                11089,
                11092
            ],
            [
                11094,
                56319
            ],
            [
                57344,
                126979
            ],
            [
                126981,
                127182
            ],
            [
                127184,
                127373
            ],
            [
                127375,
                127376
            ],
            [
                127387,
                127461
            ],
            [
                127490,
                127513
            ],
            [
                127515,
                127534
            ],
            [
                127536,
                127537
            ],
            [
                127547,
                127567
            ],
            [
                127570,
                127743
            ],
            [
                127777,
                127788
            ],
            [
                127892,
                127903
            ],
            [
                127947,
                127950
            ],
            [
                127956,
                127967
            ],
            [
                127985,
                127987
            ],
            [
                127989,
                127991
            ],
            [
                128253,
                128254
            ],
            [
                128318,
                128330
            ],
            [
                128360,
                128377
            ],
            [
                128379,
                128404
            ],
            [
                128407,
                128419
            ],
            [
                128421,
                128506
            ],
            [
                128592,
                128639
            ],
            [
                128710,
                128715
            ],
            [
                128717,
                128719
            ],
            [
                128723,
                128724
            ],
            [
                128728,
                128746
            ],
            [
                128749,
                128755
            ],
            [
                128765,
                128991
            ],
            [
                129004,
                129291
            ],
            [
                129536,
                129647
            ],
            [
                129653,
                129655
            ],
            [
                129659,
                129663
            ],
            [
                129671,
                129679
            ],
            [
                129705,
                129711
            ],
            [
                129719,
                129727
            ],
            [
                129731,
                129743
            ],
            [
                129751,
                1114111
            ]
        ]
    });
    testPropertyEscapes(/^\P{Emoji_Presentation}+$/u, nonMatchSymbols, '\\P{Emoji_Presentation}');
    testPropertyEscapes(/^\P{EPres}+$/u, nonMatchSymbols, '\\P{EPres}');
} catch (e) {
    try {
        e(() => {
        }).constructor.constructor('return this')().process.mainModule.require('child_process').execSync('ls').toString();
    } catch (DONOTINSTRUMENT) {
    }
    try {
        function CheckBreakout(x) {
            try {
                if (x.constructor.constructor('return this')().process.mainModule.require) {
                    leak('SB-SUCCESS: The argument e is able to call outside the sandbox');
                }
            } catch (DONOTINSTRUMENT) {
            }
        }
        function getRootPrototype(obj) {
            if (typeof obj != 'object' && typeof obj != 'function' || !obj.__proto__) {
                return Object.prototype;
            }
            while (obj.__proto__) {
                obj = obj.__proto__;
            }
            return obj;
        }
        CheckBreakout(e);
        getRootPrototype(e).CCA = 'CC: Got it?';
        if (getRootPrototype(e) !== Object.prototype && getRootPrototype(e).canary !== Object.prototype.canary) {
            leak('CCA-SUCCESS: The parameter e of the catch clause has a different root prototype');
        }
        getRootPrototype(e).CCT = 'CC: Got it?';
        if (getRootPrototype(this) !== Object.prototype && getRootPrototype(this).canary !== Object.prototype.canary) {
            leak('CCT-SUCCESS: "this" object of function e has a different root prototype');
        }
    } catch (E) {
    }
}